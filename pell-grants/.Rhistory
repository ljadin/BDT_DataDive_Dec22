data$fips %>% sapply(strsplit, ', ') %>% as.data.frame() %>% t() %>% {
colnames(.) <- c('fips_county', 'fips_state')
. } %>% {
cbind(data, .)
}
data <- data$fips %>% sapply(strsplit, ', ') %>% as.data.frame() %>% t() %>% {
colnames(.) <- c('fips_county', 'fips_state')
. } %>% {
cbind(data, .)
}
colnames(data)
(data_per_state <- aggregate(data[, c("n_pell","headcount_based_on_grant_data")], by=list(state=data$fips_state), sum) %>%
mutate(per_pell = round(100 * n_pell / headcount_based_on_grant_data))) %>% head()
(data_per_county <- aggregate(data[, c("n_pell","headcount_based_on_grant_data")], by=list(county=data$fips_county, state=data$fips_state, fips=data$fips), sum) %>%
mutate(per_pell = round(100 * n_pell / headcount_based_on_grant_data))) %>% head()
data_per_county$per_pell_state <- data_per_state$per_pell[match(data_per_county$state, data_per_state$state)]
data_per_county$gap <- data_per_county$per_pell_state - data_per_county$per_pell
library(urbnmapr)
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = 'grey', color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
states
counties
merge(states, data_per_state, by.x = 'state_abbv', by.y = fips_state, all.x = T)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'fips_state', all.x = T)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T)
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group, fill=per_pell),
f color = 'white') +
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis()
library(urbnmapr)
library(viridis)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis()
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='inferno')
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
counties
View(data_per_county)
merge(counties, data_per_county, by.x = 'county_name', by.y = 'county', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(counties, data_per_county, by.x = 'county_name', by.y = 'county', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group),
fill = 'grey', color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group),
fill = 'grey', color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
merge(counties, data_per_county, by.x = 'county_name', by.y = 'county', all.x = T)
counties
merge(counties, data_per_county, by.x = 'county_name', by.y = 'county', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
paste(counties$county_name, counties$state_abbv)
paste(counties$county_name, counties$state_abbv, sep=', ')
match(data_per_county$fips, paste(counties$county_name, counties$state_abbv, sep=', '))
counties$county_fips[match(data_per_county$fips, paste(counties$county_name, counties$state_abbv, sep=', '))]
counties[counties$county_fips == 45001]
counties[counties$county_fips == 45001, ]
data_per_county$fips_code = counties$county_fips[match(data_per_county$fips, paste(counties$county_name, counties$state_abbv, sep=', '))]
merge(counties, data_per_county, by.x = 'county_fips', by.y = 'fips_code', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(counties, data_per_county, by.x = 'county_fips', by.y = 'fips_code', all.x = T) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA, fill='grey') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(counties, data_per_county, by.x = 'county_fips', by.y = 'fips_code', all.x = T) %>% dim()
counties %>% dim()
?merge
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(counties, data_per_county, by.x = 'county_fips', by.y = 'fips_code', all.x = T, sort=F)
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA, fill='grey') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(counties, data_per_county, by.x = 'county_fips', by.y = 'fips_code', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA, fill='grey') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
merge(counties, data_per_county, by.x = 'county_fips', by.y = 'fips_code', all.x = T, sort=F) %>%
ggplot(counties) +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA, fill='grey') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
ggplot(counties) +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA, fill='grey') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)])
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA, fill='grey') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='magma')
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='turbo')
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='brewer yellow-green-blue')
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
install.packages('sf')
install.packages('plotly')
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
states <- read_sf("resources/us_map/US-State-Boundaries-Census-2014.shp") %>%
st_zm()
states <- read_sf("resources/us_map/US-State-Boundaries-Census-2014.shp")
library(sf)
library(plotly)
states <- read_sf("resources/us_map/US-State-Boundaries-Census-2014.shp") %>%
st_zm()
states <- read_sf("cb_2018_us_state_500k.zip") %>%
st_zm()
states <- read_sf("cb_2018_us_state_500k/cb_2018_us_state_500k.shp") %>%
st_zm()
states <- read_sf("cb_2018_us_state_500k/cb_2018_us_state_500k.shp") %>%
st_zm()
states
states <- read_sf("cb_2018_us_state_500k/cb_2018_us_state_500k.shp") %>%
st_zm() %>% mutate(per_pell = data_per_state$per_pell[match(STUSPS, data_per_state$state)])
View(states)
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
ggplotly(g)
?ggplotly
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
ggplotly(g, tooltip = 'gap')
counties
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
ggplotly(g, tooltip = c('county_name', 'gap'))
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=county_name),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
ggplotly(g, tooltip = c('county_name', 'gap'))
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=0.5)
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1)
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=county_name),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap percentage')
ggplotly(g, tooltip = c('gap', 'county_name'))
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=county_name),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to state') +
xlab('') +
ylab('')
ggplotly(g, tooltip = c('gap', 'county_name'), width=1920, height=1080)
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=county_name),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to state') +
xlab('') +
ylab('')
ggplotly(g, tooltip = c('gap', 'county_name'))
counties
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=paste(county_name, state_abbv, sep=', ')),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to their respective state') +
xlab('') +
ylab('')
ggplotly(g, tooltip = c('gap', 'county_name'))
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=paste(county_name, state_abbv, sep=', ')),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to their respective state') +
xlab('') +
ylab('')
gi <- ggplotly(g, tooltip = c('gap', 'county_name'))
htmlwidgets::saveWidget(as_widget(b), "pell grant gap.html")
htmlwidgets::saveWidget(as_widget(gi), "pell grant gap.html")
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
mutate(label = paste(county_name, state_abbv, sep=', ')) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=label),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to their respective state') +
xlab('') +
ylab('')
gi <- ggplotly(g, tooltip = c('gap', 'label'))
htmlwidgets::saveWidget(as_widget(gi), "pell grant gap.html")
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
mutate(label = paste(county_name, state_abbv, sep=', ')) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, county=label),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to their respective state') +
xlab('') +
ylab('')
gi <- ggplotly(g, tooltip = c('gap', 'county'))
htmlwidgets::saveWidget(as_widget(gi), "pell grant gap.html")
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
mutate(label = paste(county_name, state_abbv, sep=', ')) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, county=label),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to their respective state') +
xlab('') +
ylab('')
gi <- ggplotly(g, tooltip = c('gap', 'county'))
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
mutate(county = paste(county_name, state_abbv, sep=', ')) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=county),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to their respective state') +
xlab('') +
ylab('')
gi <- ggplotly(g, tooltip = c('gap', 'county'))
htmlwidgets::saveWidget(as_widget(gi), "pell grant gap.html")
View(data_per_state)
library(tidyverse)
data <- read.csv('2021_data_nces.csv')
head(data)
data <- data[complete.cases(data), ]
data <- data[nchar(data$county) > 0, ]
data <- data$fips %>% sapply(strsplit, ', ') %>% as.data.frame() %>% t() %>% {
colnames(.) <- c('fips_county', 'fips_state')
. } %>% {
cbind(data, .)
}
colnames(data)
(data_per_state <- aggregate(data[, c("n_pell","undergrand_headcount")], by=list(state=data$fips_state), sum) %>%
mutate(per_pell = round(100 * n_pell / headcount_based_on_grant_data))) %>% head()
(data_per_state <- aggregate(data[, c("n_pell","undergrand_headcount")], by=list(state=data$fips_state), sum) %>%
mutate(per_pell = round(100 * n_pell / undergrad_headcount))) %>% head()
(data_per_state <- aggregate(data[, c("n_pell","undergrad_headcount")], by=list(state=data$fips_state), sum) %>%
mutate(per_pell = round(100 * n_pell / undergrad_headcount))) %>% head()
(data_per_county <- aggregate(data[, c("n_pell","undergrad_headcount")], by=list(county=data$fips_county, state=data$fips_state, fips=data$fips), sum) %>%
mutate(per_pell = round(100 * n_pell / undergrad_headcount))) %>% head()
data_per_county$per_pell_state <- data_per_state$per_pell[match(data_per_county$state, data_per_state$state)]
data_per_county$gap <- data_per_county$per_pell_state - data_per_county$per_pell
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group),
fill = 'grey', color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
states
library(urbnmapr)
library(viridis)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
merge(urbnmapr::states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
(data_per_state <- aggregate(data[, c("n_pell","undergrad_headcount")], by=list(state=data$fips_state), sum) %>%
mutate(per_pell = round(100 * n_pell) / undergrad_headcount)) %>% head()
data <- data[complete.cases(data), ]
data <- data[nchar(data$county) > 0, ]
data <- data[data$undergrad_headcount > 0, ]
data <- data$fips %>% sapply(strsplit, ', ') %>% as.data.frame() %>% t() %>% {
colnames(.) <- c('fips_county', 'fips_state')
. } %>% {
cbind(data, .)
}
colnames(data)
(data_per_state <- aggregate(data[, c("n_pell","undergrad_headcount")], by=list(state=data$fips_state), sum) %>%
mutate(per_pell = round(100 * n_pell / undergrad_headcount))) %>% head()
data$headcount_based_on_grant_data <- ((100 * data$n_pell) / data$per_pell) %>% round()
data <- data[complete.cases(data), ]
data <- data[nchar(data$county) > 0, ]
data <- data[data$per_pell > 0, ]
data <- data$fips %>% sapply(strsplit, ', ') %>% as.data.frame() %>% t() %>% {
colnames(.) <- c('fips_county', 'fips_state')
. } %>% {
cbind(data, .)
}
colnames(data)
(data_per_state <- aggregate(data[, c("n_pell","headcount_based_on_grant_data")], by=list(state=data$fips_state), sum) %>%
mutate(per_pell = round(100 * n_pell / headcount_based_on_grant_data))) %>% head()
(data_per_county <- aggregate(data[, c("n_pell","headcount_based_on_grant_data")], by=list(county=data$fips_county, state=data$fips_state, fips=data$fips), sum) %>%
mutate(per_pell = round(100 * n_pell / headcount_based_on_grant_data))) %>% head()
data_per_county$per_pell_state <- data_per_state$per_pell[match(data_per_county$state, data_per_state$state)]
data_per_county$gap <- data_per_county$per_pell_state - data_per_county$per_pell
library(urbnmapr)
library(viridis)
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group),
fill = 'grey', color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45)
merge(states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
merge(urbnmapr::states, data_per_state, by.x = 'state_abbv', by.y = 'state', all.x = T, sort=F) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=per_pell),
color = 'white') +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
data_per_county$fips_code = counties$county_fips[match(data_per_county$fips, paste(counties$county_name, counties$state_abbv, sep=', '))]
counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako')
library(sf)
library(plotly)
g <- counties %>% mutate(gap = data_per_county$gap[match(counties$county_fips, data_per_county$fips_code)]) %>%
mutate(county = paste(county_name, state_abbv, sep=', ')) %>%
ggplot() +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill=gap, label=county),
color = NA) +
coord_map(projection = 'albers', lat0 = 39, lat1 = 45) +
scale_fill_viridis(option='mako') +
theme(asp=1) +
labs(fill='gap (%)') +
ggtitle('Pell grant percentage gap in US counties relative to their respective state') +
xlab('') +
ylab('')
gi <- ggplotly(g, tooltip = c('gap', 'county'))
htmlwidgets::saveWidget(as_widget(gi), "pell grant gap.html")
setwd("~/Datadive/BDT_DataDive_Dec22/pell-grants")
